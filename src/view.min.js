var view=function($){var self={};self.debug=false;var _has=function(obj,prop){return obj.hasOwnProperty(prop)};var _log=function(obj){if(self.debug&&window.console){console.log(obj)}return obj};var _tpl=function(tpl,data){if(!Handlebars.templates){Handlebars.templates=[]}if(!Handlebars.templates[tpl]){var src=$('script[name="'+tpl+'"]').html();Handlebars.templates[tpl]=Handlebars.compile(src)}return Handlebars.templates[tpl](data)};var _fill=function(selector,tpl,data){return $(selector).html(_tpl(tpl,data)).show()};var _render=function(data){this.data=typeof data!=="undefined"?data:this.data;var selector=_fill(this.selector,this.template,this.data),view=this;for(var i in this.events){var evt=i.split(" ",2);$(selector).on(evt[0],evt[1],this.events[i])}if(this.callback){return this.callback(selector)}return selector};var _hide=function(){$(this.selector).hide()};self.add=function(view){if(!_has(view,"name"))throw new Error("Required: name");if(!_has(view,"selector"))view.selector="#"+view.name;if(!_has(view,"template"))view.template=view.name;var defaults={selector:null,template:null,callback:null,hide:null,events:{},data:{}};self[view.name]=$.extend(defaults,view);self[view.name].render=$.proxy(_render,self[view.name]);if(self[view.name].hide===null){self[view.name].hide=$.proxy(_hide,self[view.name])}else{self[view.name].hide=$.proxy(self[view.name].hide,self[view.name])}return self[view.name]};return self}(jQuery||$);